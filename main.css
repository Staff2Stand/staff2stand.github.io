html,
body {
  padding: 0;
  margin: 0;
}

/* ROOT VARIABLES */
:root {
  --header_content_height: 20px;
  --header_content_padding: 10px;
  --header_height: calc(
    var(--header_content_height) + var(--header_content_padding) * 2
  );
}

/* LAYOUT */
#main_container {
  display: grid;
  grid-template-areas:
    "header header"
    "sidebar page_content";
  grid-template-columns: 200px 1fr;
  grid-template-rows: var(--header_height) calc(100vh - var(--header_height));
  position: relative;
  width: 100%;
  left: 0;
}
header {
  grid-area: header;
}
#page_content {
  grid-area: page_content;
  overflow-y: scroll;
  position: relative;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
}
#sidebar {
  grid-area: sidebar;
}
/* sidebar toggle */
#main_container,
header,
#sidebar_toggle_container {
  transition: all ease-in-out 0.4s;
}
#main_container {
  --slide_amount: calc(200px - 35px);
}
#main_container.sidebar_collapsed {
  left: calc(var(--slide_amount) * -1);
  width: calc(100% + var(--slide_amount));
}
#main_container.sidebar_collapsed header {
  /* % is now relative to the new main_container width, so we're using 20vw bc 20% of the old main_container width === 20vw */
  padding-left: calc(var(--slide_amount) + var(--header_content_padding));
}

/* HEADER */
header {
  background: #333;
  position: sticky;
  top: 0;
  z-index: 3;
  color: #fff;
  padding: var(--header_content_padding);
  height: var(--header_content_height);
}

/* SIDEBAR */
#sidebar {
  --hamburger-line-height: 5px;
  --hamburger-height: calc(var(--hamburger-line-height) * 7);
  --left_margin: 0px;

  background: linear-gradient(270deg, #333 0 35px, #222 35px 100%);

  color: #fff;
  position: relative;
  padding-right: calc(var(--hamburger-height) + var(--left_margin));
  padding-left: var(--left_margin);
  user-select: none;
  -webkit-user-select: none;
}

#sidebar :is(h1, h2, h3, h4, h5, h6) {
  cursor: pointer;
  margin: 0;
  padding-bottom: 6px;
}
#sidebar :is(h1, h2, h3) {
  font-size: 16px;
  text-align: center;
}

#sidebar .score_bookmark_section {
  --height: auto;
  height: var(--height);
  width: calc(100% - 14px);
  list-style-type: none;
  margin: 0;
  margin-top: 12px;
  padding: 4px;
  padding-right: 0;
  position: relative;
  border: 3px solid;
  border-radius: 3px;
  overflow: hidden;
}

#sidebar .score_bookmark {
  cursor: pointer;
  padding: 6px 0;
}
#sidebar .score_bookmark::after {
  content: attr(_title);
}
#sidebar .score_bookmark:hover::after {
  color: #888;
}
#sidebar .score_bookmark.current {
  cursor: default;
  color: #888;
}
#sidebar .score_bookmark.current:hover::after {
  color: #888;
}

#sidebar_toggle_container {
  cursor: pointer;
  position: absolute;
  top: 6px;
  right: 6px;
  width: calc(var(--hamburger-line-height) * 5);
  height: var(--hamburger-height);
  transform: rotateY(0deg);
}
.sidebar_collapsed #sidebar_toggle_container {
  transform: rotateY(180deg);
}
#sidebar_toggle,
#sidebar_toggle::before,
#sidebar_toggle::after {
  content: "";
  position: absolute;
  width: 100%;
  height: var(--hamburger-line-height);
  background-color: #fff;
  border-radius: var(--hamburger-line-height);
  top: calc(50% - var(--hamburger-line-height) / 2);
}
#sidebar_toggle::before {
  transform: rotateZ(45deg);
  width: 75%;
  left: -4px;
  top: calc(var(--hamburger-line-height) * 2 - 4px);
}
#sidebar_toggle::after {
  top: unset;
  transform: rotateZ(-45deg);
  width: 75%;
  left: -4px;
  bottom: calc(var(--hamburger-line-height) * 2 - 4px);
}
/* sidebar buttons */
#sidebar_buttons {
  position: absolute;
  right: 0;
  top: 40px;
  width: 32px;
  display: flex;
  flex-flow: column wrap;
  height: min-content;
  padding: 6px 0;
}
#sidebar_buttons > span {
  cursor: pointer;
  width: calc(100% - 4px);
  margin-left: 2px;
  height: 40px;
  display: flex;
}
#sidebar_buttons .spaceAbove {
  margin-top: 1em;
}

/* Print */
#print svg {
  /* the sidebar button */
  fill: #cdcdcd;
}
#print:hover svg {
  fill: #fff;
}
#sidebar_buttons #print.active {
  --h: 255;
  --s: 0%;
  --l: 80%; /*<- for glow*/
}
#print.active svg {
  fill: #fff;
}
#printMenu {
  display: none;
  background: #333;
  padding: 6px;
  border-radius: 16px;
  position: absolute;
  left: 35px;
  bottom: 0;
  width: max-content;
  z-index: 999;
}
#print.active + #printMenu {
  display: flex;
  flex-flow: column wrap;
  gap: 6px;
}
#printMenu span {
  color: #ddd;
  text-align: center;
}
#printMenu span:hover {
  cursor: pointer;
  color: #fff;
}

/* clear scores */
#sidebar_buttons #clear_scores svg {
  fill: #ff4e4e;
}
#sidebar_buttons #clear_scores:hover svg {
  fill: #ff7a7a;
}

/* fingerings toggle */
#sidebar_buttons #fingerings_toggle {
  --h: 182deg;
}
#sidebar_buttons #fingerings_toggle svg {
  fill: hsl(var(--h) var(--s) var(--l));
}
/* highlights toggle */
#sidebar_buttons #highlights_toggle {
  --h: 64deg;
}
#sidebar_buttons #highlights_toggle svg {
  fill: hsl(var(--h) var(--s) var(--l));
}
/* notenames toggle */
#sidebar_buttons #notenames_toggle {
  --h: 122deg;
}
#sidebar_buttons #notenames_toggle svg {
  fill: hsl(var(--h) var(--s) var(--l));
}
/* inactive saturation and lightness */
#sidebar_buttons span {
  --s: 60%;
  --l: 40%;
}
/* hover saturation and lightness */
#sidebar_buttons span:hover,
#sidebar_buttons span.active:hover {
  --s: 100%;
  --l: 60%;
}
/* active saturation and lightness */
#sidebar_buttons span.active {
  --s: 100%;
  --l: 60%;
}
/* active span */
#sidebar_buttons span.active {
  /* outline: 2px solid blue; */
  border-radius: 50%;
  background: radial-gradient(
    hsla(var(--h) var(--s) calc(var(--l) - 25%) / 1),
    hsla(var(--h) var(--s) var(--l) / 0) 80%
  );
}

/* SCORE INFO */
.score_info {
  padding: 0 15px;
  position: sticky;
  top: 0;
  z-index: 2;
  background: #fff;
}
.title,
.subtitle,
.composer {
  font-family: "Lucida Sans";
}
.title,
.subtitle {
  text-align: center;
}
.composer {
  text-align: right;
}

.score_info.stuck {
  box-shadow: -6px 0px 6px 6px #333;
}

/* TUNE */
/* Part Titles */
.tune::before {
  content: attr(instrument) " " attr(part);
  font-family: "Lucida Sans", sans-serif;
  font-size: 1.5vw;
  font-weight: bold;
  font-style: italic;
  position: relative;
  left: 1em;
}

/* SETTINGS */
.score {
  position: relative;
  max-width: 100% !important;
}

.score_settings {
  position: absolute;
  top: 1em;
  left: 1.5vw;
  z-index: 1;
  background: #333;
  color: #fff;
  padding: 4px;
  border-radius: 8px;
  margin-top: -1.5em;
}
.score_settings {
  top: 6px;
  max-width: 80%;
  margin-top: 0;
}

/* expand settings on hover */
.score_settings .score_settings_main {
  display: none;
}
.score_settings:hover .score_settings_main {
  display: grid;
}
/* toggler */
.score_settings .score_settings_toggler {
  cursor: default;
  text-align: right;
  font-size: 1.5vw;
}
.score_settings .score_settings_toggler svg {
  fill: #f0f0f0;
  width: 22px;
}
/* 'Settings' text */
.score_settings .score_settings_main::before {
  content: "Part Settings";
  position: absolute;
  top: 2px;
  text-align: center;
  width: 100%;
  font-weight: bold;
  font-style: italic;
}
.score_settings .score_settings_main::before {
  content: "Score Settings";
}
/* score settings layout */
.score_settings_main {
  display: grid;
  grid-template-columns: max-content min-content;
  column-gap: 12px;
}
.score_settings_main div {
  position: relative;
}
.score_settings_main div:first-child::after {
  content: "";
  display: inline-block;
  position: absolute;
  width: 4px;
  height: 100%;
  top: 0;
  right: -9px;
  background: linear-gradient(180deg, transparent, #fff, transparent);
}
/* headings */
.score_settings h4 {
  margin: 6px;
}

/* Parts Toggles */
.parts_toggles {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
}
.parts_toggles label {
  text-transform: capitalize;
}
.score_settings_parts_togglers {
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-template-rows: repeat(auto, 20px);
}
.score_settings_parts_togglers h4 {
  grid-column: 1 / span 2;
}
.score_settings_parts_togglers input {
  grid-column: 1;
}
.score_settings_parts_togglers label {
  grid-column: 2;
}

.abcEditor{
  width: 100%;
  height: 15em;
}

/* misc settings */
.score_settings_misc {
  margin: 6px;
  grid-column: 2;
  display: flex;
  flex-flow: column wrap;
  justify-content: space-evenly;
}

/* score size */
.score_settings_size {
  grid-column: 1 / span 2;
}
.score_settings_size h4 {
  text-align: center;
}
.score_settings_size input {
  width: 99%;
}

/* HIGHLIGHTING */
#tunes_container {
  --cStringColor: purple;
  --gStringColor: green;
  --dStringColor: blue;
  --aStringColor: #ff4700;
  --eStringColor: teal;
}

:not(.highlight_notes) .abcjs-note {
  --selection_glow: #000;
}

/* C String */
.highlight_notes .cString,
.highlight_notes .cString ~ :is(.abcjs-fingering, .abcjs-noteName){
  --selection_glow: var(--cStringColor);
  fill: var(--cStringColor);
}

/* G String */
.highlight_notes .gString,
.highlight_notes .gString ~ :is(.abcjs-fingering, .abcjs-noteName){
  --selection_glow: var(--gStringColor);
  fill: var(--gStringColor);
}

/* D String */
.highlight_notes .dString,
.highlight_notes .dString ~ :is(.abcjs-fingering, .abcjs-noteName){
  --selection_glow: var(--dStringColor);
  fill: var(--dStringColor);
}

/* A String */
.highlight_notes .aString,
.highlight_notes .aString ~ :is(.abcjs-fingering, .abcjs-noteName){
  --selection_glow: var(--aStringColor);
  fill: var(--aStringColor);
}

/* E String */
.highlight_notes .eString,
.highlight_notes .eString ~ :is(.abcjs-fingering, .abcjs-noteName){
  --selection_glow: var(--eStringColor);
  fill: var(--eStringColor);
}

/* selected note */
.tune .abcjs-note_selected {
  fill: var(--selection_glow);
  filter: drop-shadow(0px 0px 6px var(--selection_glow));
}
/* deselected note */
:is(.abcjs-note, .abcjs-rest):not(.abcjs-note_selected) {
  fill: #000;
  stroke: none;
}

/* text annotations
    text annotations have text-anchor="start", fignerings have text-anchor="middle"
*/
text.abcjs-annotation[text-anchor="start"] {
  fill: #000;
}
/* move text annotations attatched to the last barline, down closer to the barling
      otherwise it was looking like it was text below the line above.
*/
.abcjs-bar:last-of-type text.abcjs-annotation[text-anchor="start"] {
  transform: translate(0px, 10%);
}
/* note letter names */
.abcjs-annotation.noteLetterName {
  fill: inherit !important;
}

/* FINGERING AND LETTER NAME VISIBILITY */
.abcjs-fingering,
.abcjs-noteName{
  opacity: 0;
  transition: opacity 400ms ease-in-out;
}
#main_container:has(#fingerings_toggle.active) .abcjs-fingering,
#main_container:has(#notenames_toggle.active) .abcjs-noteName{
  opacity: 100%;
}
.abcjs-note_selected .abcjs-fingering,
.abcjs-note_selected .abcjs-noteName {
  opacity: 100%;
}

/* FOOTER */
footer {
  background: #333;
  color: #fff;
  padding: var(--header_content_padding);
}

/* TOOLTIPS */
/* double check that an element with tooltip doesn't already have an after */
*[tooltip] {
  position: relative;
}
*[tooltip]:not(#print.active):hover:after {
  content: attr(tooltip);
  position: absolute;
  width: fit-content;
  height: fit-content;
  background: #333;
  color: #fff;
  padding: 6px;
  border-radius: 6px;
  z-index: 10;
}
#sidebar_buttons span[tooltip]:hover:after {
  margin-left: 32px;
}

/* LOADING ICON */
#page_content {
  position: relative;
}
#loadingIcon {
  display: none;
  width: 100px;
  height: 100px;
  position: absolute;
  top: calc(50vh - 100px);
  left: calc(50% - 50px);
}
#loadingIcon svg {
  animation: spin 3s cubic-bezier(0.52, 0.27, 0.46, 0.69) 0s infinite;
  fill: hsl(0 100% 0%);
}
@keyframes spin {
  0% {
    transform: rotatez(0deg);
    width: 100px;
    height: 100px;
    top: calc(50vh - 100px);
    left: calc(50% - 50px);
  }
  50% {
    width: 150px;
    height: 150px;
    top: calc(50vh - 150px);
    left: calc(50% - 75px);
    transform: rotatez(180deg);
  }
  100% {
    transform: rotatez(360deg);
    width: 100px;
    height: 100px;
    top: calc(50vh - 100px);
    left: calc(50% - 50px);
  }
}

/* NOTEY */
/* Create Notey */
.notey {
  /* head */
  --h: 160;
  --s: 73%;
  --l: 46%;
  --bgColor: hsl(var(--h), var(--s), var(--l));
  --bgColor-light: hsl(var(--h), var(--s), calc(var(--l) + 10%));
  --bgColor-dark: hsl(var(--h), var(--s), calc(var(--l) - 40%));
  --width: 100px;
  --height: calc(var(--width) * 0.8);

  width: var(--width);
  height: var(--height);
  isolation: isolate;
  position: relative;
  filter: drop-shadow(2px 4px 2px rgba(0 0 0 / 0.7));
}

.notey-body {
  background: var(--bgColor);
  border-radius: 50%;
  width: 100%;
  height: 100%;
}

.notey-stem {
  position: absolute;
  width: 30%;
  height: 200%;
  right: 0;
  bottom: 50%;
  background-color: var(--bgColor);
  z-index: -1;
  border-radius: 50% 50% 0 0 / 10% 10% 0 0;
}

.notey-eyes:before,
.notey-eyes:after,
.notey-eyelids:before,
.notey-eyelids:after {
  /* eyes and brows */
  --shadingBG: radial-gradient(
    ellipse at 40% 40%,
    transparent 50%,
    rgba(0 0 0 / 0.8)
  );
  content: "";
  width: 20%;
  height: 40%;
  position: absolute;
  top: -10%;
  left: 10%;
  border: 2px solid black;
  border-radius: 50%;
  background: var(--shadingBG),
    radial-gradient(ellipse at 40% 50%, black 30%, rgb(240 240 240) 39%);
}
.notey-eyes:after,
.notey-eyelids:after {
  /* right eye */
  left: 40%;
  /* top: 0; */
}
.notey-eyelids:after,
.notey-eyelids:before {
  background: var(--shadingBG), var(--bgColor);
}

.notey-eyes:before,
.notey-eyes:after {
  /* eyes */
  clip-path: polygon(
    /* top */ 0% 0%,
    /* top */ 100% 0%,
    /* bottom */ 100% calc(100% - 0%),
    /* bottom */ 0% calc(100% - 0%)
  );
}
/* Eye expressions */
.looking-at-user .notey-eyes:before,
.looking-at-user .notey-eyes:after {
  background: var(--shadingBG),
    radial-gradient(ellipse at 50% 50%, black 30%, rgb(240 240 240) 39%);
}

.looking-forward .notey-eyes:before,
.looking-forward .notey-eyes:after {
  background: var(--shadingBG),
    radial-gradient(ellipse at 40% 50%, black 30%, rgb(240 240 240) 39%);
}

.looking-backward .notey-eyes:before,
.looking-backward .notey-eyes:after {
  background: var(--shadingBG),
    radial-gradient(ellipse at 60% 50%, black 30%, rgb(240 240 240) 39%);
}

.looking-at-left-hand .notey-eyes:before,
.looking-at-left-hand .notey-eyes:after {
  background: var(--shadingBG),
    radial-gradient(ellipse at 60% 65%, black 30%, rgb(240 240 240) 39%);
}

.looking-at-right-hand.notey-eyes:before,
.looking-at-right-hand.notey-eyes:after {
  background: var(--shadingBG),
    radial-gradient(ellipse at 35% 65%, black 30%, rgb(240 240 240) 39%);
}

.eyes-winking-left .notey-eyes:before,
.eyes-winking-right .notey-eyes:after,
.eyes-blinking .notey-eyes:before,
.eyes-blinking .notey-eyes:after {
  /* wink/blink infinite */
  animation: blink 5s linear -1.6s infinite alternate-reverse;
}
@keyframes blink {
  0%,
  47%,
  53%,
  100% {
    clip-path: polygon(
      /* top */ 0% 0%,
      /* top */ 100% 0%,
      /* bottom */ 100% calc(100% - 0%),
      /* bottom */ 0% calc(100% - 0%)
    );
  }
  50% {
    clip-path: polygon(
      /* top */ 0% 50%,
      /* top */ 100% 50%,
      /* bottom */ 100% calc(100% - 50%),
      /* bottom */ 0% calc(100% - 50%)
    );
  }
}

.notey-mouth {
  /* mouth */
  position: absolute;
  width: 26%;
  height: 16%;
  background: transparent;
  border-radius: 0 0 50% 50% / 0 0 80% 80%;
  border: calc(var(--width) * 0.03) solid black;
  border-top: 0;
  border-right: 0;
  border-left: 0;
  bottom: 30%;
  left: 25%;
}
.frowning .notey-mouth {
  transform: rotate(180deg) translatey(-30%);
}

.notey-hand-left,
.notey-hand-right {
  width: 33%;
  height: 33%;
  background: var(--bgColor);
  border-radius: 50%;
  position: absolute;
  right: -5%;
  top: 45%;
  box-shadow: inset calc(var(--width) * -0.05) calc(var(--height) * -0.05)
    calc(var(--width) * 0.03) rgba(0 0 0 / 0.2);
}
.notey-hand-right {
  /* display: none; */
  right: 87%;
  z-index: -1;
}

/* Notey Instruments */
#notey:not(:is(.playing-violin, .holding-violin))
  :is(.notey-violin, .notey-violin-bow) {
  /* hide violin and bow if not plyaing or holding it */
  display: none;
}

:is(.holding-violin, .playing-violin) .notey-violin {
  position: absolute;
  width: 155%;
  height: min-content;
  right: -38%;
  top: 35%;
  transform: rotate(-90deg);
  transform-origin: 70% 50%;
  clip-path: polygon(
    /* points of outer square going counterclockwise  */ 83% 100%,
    100% 100%,
    100% 0,
    0 0,
    0 100%,
    /* back to (near) first point outer square */ 69% 100%,
    /* points of inner shape going clockwise */ 69% 0,
    83% 0,
    /* back to first point of inner shape */ 83% 100%
  );
}
:is(.holding-violin, .playing-violin) .notey-violin-bow {
  position: absolute;
  width: 155%;
  height: min-content;
  left: -150%;
  top: 50%;
  transform-origin: 90% 50%;
  transform: rotate(90deg) scaley(-1);
}

/* Position notey */
#notey .notey {
  position: fixed;
  top: 50vh;
  right: calc(50vw - 100px);
  z-index: 9999999999999;
}

#sidebar_buttons .notey {
  --width: 25px;
  margin-top: 200%;
}

#sidebar_buttons #noteyToggle {
  height: fit-content;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
}
#sidebar_buttons #noteyToggle:hover .notey {
  --bgColor: var(--bgColor-light);
}

/* Notey Shading */
.notey-body,
.notey-hand-left,
.notey-hand-right {
  background: radial-gradient(ellipse at 33% 33%, var(--bgColor) 16.5%, #000);
}
.notey-stem {
  background: radial-gradient(
      circle at -89px calc(100% - (80px * 0.43)),
      var(--bgColor) 16.5%,
      #000
    ),
    radial-gradient(ellipse at 33% 37%, var(--bgColor) 6.5%, #000);
  background-blend-mode: lighten;
  /* z-index: 2; */
  /* background-size: auto, 100% 114%; */
}
.notey-eyes {
  filter: radial-gradient(circle at 50% -50%, #ddd 0 100%);
}

/* Notey Playing Instruments Animations */
.playing-violin .notey-hand-left {
  right: -10%;
  top: 122%;
  transform: rotate(45deg) rotate3d(0, 3, 1, 60deg);
}
.playing-violin .notey-violin {
  transform: rotate(45deg) rotate3d(0, 3, 1, 60deg);
  right: -35%;
  top: 100%;
}
.playing-violin .notey-hand-right {
  transform: scale(-1) rotate3d(-4.5, 3, 1, -60deg) rotate3d(1, 0, 0, 180deg);
  left: 40%;
  top: 101%;
  z-index: 1;
  animation: hand_bowing 3s ease-in-out infinite;
}
.playing-violin .notey-violin-bow {
  transform: scale(-1) rotate3d(0, 3, 1, -60deg) rotate3d(1, 0, 0, 180deg);
  left: -80%;
  top: 103%;
  z-index: 2;
  animation: bow_bowing 3s ease-in-out infinite;
}
@keyframes bow_bowing {
  50% {
    left: -117%;
    top: 130%;
  }
}
@keyframes hand_bowing {
  50% {
    left: 5%;
    top: 127%;
  }
}

/* Notey Expression */
/* 
Put the following classes on the ".notey" div
  __Class__             __Description__
  .frowning             frown
  .eyes-winking-left    left eye blink
  .eyes-winking-right   right eye blink
  .eyes-blinking        both eyes blink
  .looking-at-user      eyes turn to face user
  .looking-forward      eyes turn to face 'forward'
  .looking-backward     eyes turn to face 'backward'
  .looking-at-left-hand eyes turn to face left hand
  .looking-at-right-hand eyes turn to face right hand
 */